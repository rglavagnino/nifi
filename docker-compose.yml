version: "3"
services:
    # Nifi extraccion y transformacion de data
    nifi:
        hostname: upananifi
        container_name: nifi-contenedor
        image: 'apache/nifi:1.25.0'  
        ports:
            - '8091:8080'
        networks:
            - nifired
        volumes:
            - /home/ia-dev/lake/nifi/home:/home/nifi
            - /home/ia-dev/lake/nifi/nifi-database_repository:/opt/nifi/nifi-current/database_repository
            - /home/ia-dev/lake/nifi/nifi-flowfile_repository:/opt/nifi/nifi-current/flowfile_repository
            - /home/ia-dev/lake/nifi/nifi-content_repository:/opt/nifi/nifi-current/content_repository
            - /home/ia-dev/lake/nifi/nifi-provenance_repository:/opt/nifi/nifi-current/provenance_repository
           
#####
#Cuando se ejecuta la primera vez, si las carpetas del host no existen, si estas existen no hay que hacerlo
#Ejectuar una vez, con la linea comentada
#crear en algun lugar la carpeta nifiPersistent
#despues copiar los archivos de conf de nifi
#-- sudo docker cp 31bebec2ab01:/opt/nifi/nifi-current/conf nifiPersistent/
#Revisar si dentro de la carpeta conf, tengan todos esos archivos
#dtetener el contenedor
#copiar en la carpeta conf del server
#reiniciar el contenedor
# cp 31bebec2ab01:/home/ia-dev/lake/nifi/conf/ .
# sudo chmod 777 . -R

            - /home/ia-dev/lake/nifi/conf:/opt/nifi/nifi-current/conf

######
            - /home/ia-dev/lake/nifi/nifi-state:/opt/nifi/nifi-current/state
            - /home/ia-dev/lake/nifi/logs:/opt/nifi/nifi-current/logs
            - /home/ia-dev/lake/nifi/jdbc:/opt/nifi/nifi-current/jdbc
            - /home/ia-dev/lake/nifi/credentials:/opt/nifi/nifi-current/credentials
        environment:
            - NIFI_WEB_HTTP_PORT=8080
            - NIFI_CLUSTER_IS_NODE=true
            - NIFI_CLUSTER_NODE_PROTOCOL_PORT=8082
            - NIFI_ZK_CONNECT_STRING=upanazookeeper:2181
            - NIFI_ELECTION_MAX_WAIT=30 sec
            - NIFI_SENSITIVE_PROPS_KEY='12345678901234567890A'
        restart: on-failure
        healthcheck:
            test: ["CMD", "curl", "-f", "http://upananifi:8080/nifi/"]
            interval: 30s
            timeout: 20s
            retries: 3

    # Flujos de Nifi
    registry:
        hostname: nifireg
        container_name: registry_contenedor
        image: 'apache/nifi-registry:1.15.0'  
        restart: on-failure
        ports:
            - "18080:18080"
        environment:
            - LOG_LEVEL=INFO
            - NIFI_REGISTRY_FLOW_PROVIDER=file
        volumes:
            - /home/ia-dev/lake/nifi_reg/database:/opt/nifi-registry/nifi-registry-current/database
            - /home/ia-dev/lake/nifi_reg/flow_storage:/opt/nifi-registry/nifi-registry-current/flow_storage
        networks:
            - nifired
        healthcheck:
            test: ["CMD", "curl", "-f", "http://nifireg:18080/nifi-registry/"]
            interval: 30s
            timeout: 20s
            retries: 3
    
    # zookeeper monitoreo
    zookeeper:
        hostname: upanazookeeper
        container_name: zookeeper_container
        image: 'bitnami/zookeeper:3.7.0' 
        environment:
            - ALLOW_ANONYMOUS_LOGIN=yes
        networks:
            - nifired
        restart: always
    
    postgres:
      hostname: postgres
      container_name: postgres
      image: 'postgres:14-bullseye' 
      environment:
          POSTGRES_USER: 'postgres'
          POSTGRES_PASSWORD: 'lapicero2.'
          PGDATA: /data/postgres
      volumes:
          - /home/ia-dev/lake/postgres:/data/postgres
      ports:
          - "10008:5432"
      networks:
          - nifired
      restart: on-failure
      healthcheck:
          test: ["CMD", "pg_isready","-U", "postgres"]
          interval: 30s
          timeout: 20s
          retries: 3


    ditda-pgadmin:
      hostname: pgadmin
      container_name: pgadmin
      image: 'elestio/pgadmin:REL-8_4'
      environment:
          PGADMIN_DEFAULT_EMAIL: 'usuario'
          PGADMIN_DEFAULT_PASSWORD: 'lapicero2.'
          PGADMIN_CONFIG_SERVER_MODE: 'False'
      volumes:
          - /home/ia-dev/lake/pgadmin:/var/lib/pgadmin
      ports:
          - "10009:80"
      networks:
          - nifired
      restart: on-failure
      healthcheck:
          test: ["CMD", "curl", "-f", "http://pgadmin:80/misc/ping"]
          interval: 30s
          timeout: 20s
          retries: 3

volumes:
    nifi-database_repository:
    nifi-flowfile_repository:
    nifi-content_repository:
    nifi-provenance_repository:
    nifi-state:
    nifi-conf:
    nifi_registry-database:
    nifi_registry-flow_storage:

networks:
    nifired:
        driver: bridge